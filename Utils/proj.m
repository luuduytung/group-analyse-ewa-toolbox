function [proj] = proj(u)
% Project orthogonally u = (u1,u2) of dimension (sqrt(M),sqrt(M),2) into 
% the space generated by the condition inv(D1)u1 = inv(D2)u2.

proj = u - tDT(lsqrDD(tD(u)));
end

function res = tD(Pxy)
res = -D12(D12(Pxy(:,:,1),'invD1'),'D2') + Pxy(:,:,2);
end

function res = tDT(u)
res(:,:,1) = -D12(D12(u,'D2T'),'invD1T');  res(:,:,2) = u;
end

function res = DD(x)
res = tD(tDT(x));
end

function y = DDfun(x,transp_flag)
sx = sqrt(length(x));
if strcmp(transp_flag,'transp')
    y = DD(reshape(x,sx,sx));
    y = y(:);
elseif strcmp(transp_flag,'notransp')
    y = DD(reshape(x,sx,sx));
    y = y(:);
end
end

function res = lsqrDD(u)
[res,flag] = lsqr(@DDfun, u(:),10e-4,10000);
res = reshape(res,sqrt(length(res)),sqrt(length(res)));
end